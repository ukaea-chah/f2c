== stderr ==
c_t1.f:
   foo:
   baz:
   bletch:
== C ==
/* c_t1.f -- translated by f2c (version @VSN).
   You must link the resulting object file with libf2c:
	on Microsoft Windows system, link with libf2c.lib;
	on Linux or Unix systems, link with .../path/to/libf2c.a -lm
	or, if you install libf2c.a in a standard place, with -lf2c -lm
	-- in that order, at the end of the command line, as in
		cc *.o -lf2c -lm
	Source for libf2c is in /netlib/f2c/libf2c.zip, e.g.,

		http://www.netlib.org/f2c/libf2c.zip
*/

#include "f2c.h"

/* Common Block Declarations */

union {
    struct {
	integer aa;
    } _1;
    struct {
	doublereal eqv_pad[1];
    } _2;
} cc_;

#define cc_1 (cc_._1)
#define cc_2 (cc_._2)

/* Table of constant values */

static integer c__6 = 6;
static integer c__9 = 9;
static integer c__1 = 1;

/*<       subroutine foo(bar) >*/
/* Subroutine */ int foo_(integer *bar)
{
    /* Local variables */
#define bb ((real *)&cc_1)

/*<       integer bar >*/
/*<       integer aa >*/
/*<       real bb(2) >*/
/*<       common /cc/ aa >*/
/*<       equivalence (aa,bb(1)) >*/
/*<       bar = bar + 1 >*/
    ++(*bar);
/*<       end >*/
    return 0;
} /* foo_ */

#undef bb


/*<       subroutine baz(quux) >*/
/* Subroutine */ int baz_(integer *quux)
{
    /* System generated locals */
    integer i__1;

    /* Local variables */
    extern /* Subroutine */ int foo_(integer *);

/*<       integer quux >*/
/*<       call foo(quux * 2) >*/
    i__1 = *quux << 1;
    foo_(&i__1);
/*<       call foo(6) >*/
    foo_(&c__6);
/*<       end >*/
    return 0;
} /* baz_ */

/*<       subroutine bletch(gorp) >*/
/* Subroutine */ int bletch_(char *gorp, ftnlen gorp_len)
{
    /* Builtin functions */
    integer s_wsle(cilist *), do_lio(integer *, integer *, char *, ftnlen), 
	    e_wsle(void);

    /* Fortran I/O blocks */
    static cilist io___2 = { 0, 6, 0, 0, 0 };


/*<       character gorp*(*) >*/
/*<       write (*,*) gorp >*/
    s_wsle(&io___2);
    do_lio(&c__9, &c__1, gorp, gorp_len);
    e_wsle();
/*<       end >*/
    return 0;
} /* bletch_ */

